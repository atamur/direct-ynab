[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "direct-ynab"
description = "AI-powered YNAB4 transaction categorization tool"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "YNAB Direct User", email = "user@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]

dependencies = [
    # Phase 0 dependencies
    "pytest>=7.0.0",
    "pydantic>=2.0.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.0.0",
    "filelock>=3.0.0",
    # Phase 4 dependencies (AI/LLM)
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    # CLI dependencies
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest-cov",
    "ruff",
    "mypy",
    "assertpy",
    "pre-commit",
    "docformatter",
]

[project.scripts]
ynab-ai = "ynab_io.orchestration.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/ynab_io/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src"]
omit = [
    "src/ynab_io/_version.py",  # Generated version file
    "*/tests/*",                # Test files
    "*/__pycache__/*",          # Cache files
]

[tool.coverage.report]
# Target 85% overall coverage (current baseline)
fail_under = 85
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"


[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true

[tool.ruff]
line-length = 120
target-version = "py312"
extend-exclude = ["tests/fixtures"]

[tool.ruff.lint]
select = ["E","F","W","I"]
ignore = ["E501"]  # leave line length to the formatter
